#!/usr/bin/env python3
"""
Teste super simples - apenas valida se tudo est√° funcionando
"""

import sys
from pathlib import Path

# Adiciona backend ao path
backend_dir = Path(__file__).parent / 'backend'
sys.path.insert(0, str(backend_dir))

def main():
    print("=== TESTE R√ÅPIDO ===")
    
    # Teste 1: Import do rate controller
    try:
        from utils.newrelic_collector import rate_controller
        print("‚úÖ Rate controller importado")
        
        # Status do circuit breaker
        status = rate_controller.get_status()
        print(f"‚úÖ Circuit breaker status: {status['circuit_state']}")
        
    except Exception as e:
        print(f"‚ùå Erro no rate controller: {e}")
        return
    
    # Teste 2: Import das fun√ß√µes NRQL
    try:
        from utils.newrelic_collector import executar_nrql_graphql, buscar_todas_entidades
        print("‚úÖ Fun√ß√µes NRQL importadas")
        
    except Exception as e:
        print(f"‚ùå Erro nas fun√ß√µes NRQL: {e}")
        return
    
    # Teste 3: Import do cache
    try:
        from utils.cache import get_cache, diagnosticar_cache
        print("‚úÖ Sistema de cache importado")
        
        # Diagn√≥stico do cache
        cache_info = diagnosticar_cache()
        print(f"‚úÖ Cache v√°lido: {cache_info.get('cache_valido', False)}")
        
    except Exception as e:
        print(f"‚ùå Erro no cache: {e}")
        return
    
    # Teste 4: Import do OpenAI
    try:
        from utils.openai_connector import gerar_resposta_ia
        print("‚úÖ OpenAI connector importado")
        
    except Exception as e:
        print(f"‚ùå Erro no OpenAI: {e}")
        return
    
    print("\nüéâ TODOS OS COMPONENTES EST√ÉO FUNCIONANDO!")
    print("   ‚úÖ Rate Controller + Circuit Breaker")
    print("   ‚úÖ Fun√ß√µes NRQL")
    print("   ‚úÖ Sistema de Cache") 
    print("   ‚úÖ OpenAI Connector")
    
    print("\nüìä RESUMO DO SISTEMA:")
    print(f"   Circuit State: {status['circuit_state']}")
    print(f"   Cache V√°lido: {cache_info.get('cache_valido', False)}")
    print(f"   Entidades em Cache: {cache_info.get('total_entidades', 0)}")

if __name__ == "__main__":
    main()
